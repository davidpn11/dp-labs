[{"/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/Modal.stories.tsx":"1","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/Button.stories.tsx":"2","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/theme/index.ts":"3","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/index.tsx":"4","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/index.tsx":"5","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/styles.ts":"6","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/style.ts":"7"},{"size":745,"mtime":1609188018034,"results":"8","hashOfConfig":"9"},{"size":660,"mtime":1609184154345,"results":"10","hashOfConfig":"9"},{"size":1294,"mtime":1611548921331,"results":"11","hashOfConfig":"9"},{"size":654,"mtime":1609180912112,"results":"12","hashOfConfig":"9"},{"size":960,"mtime":1609187799850,"results":"13","hashOfConfig":"9"},{"size":3208,"mtime":1609181175705,"results":"14","hashOfConfig":"9"},{"size":986,"mtime":1611548944790,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"mss9py",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/Modal.stories.tsx",["35","36"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Modal } from \".\";\nimport { Button } from \"../Button\";\nimport ModalImage from \"../../assets/images/modal-img.svg\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const LoginModal = () => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <Wrapper>\n      <Button variant=\"primary\" onClick={() => setIsOpen(true)}>\n        Open modal\n      </Button>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)} onSubmit={() => {}}>\n        <img src={ModalImage} width={250} />\n      </Modal>\n    </Wrapper>\n  );\n};\n\nexport default {\n  title: \"Component/Modal\",\n  component: LoginModal,\n};\n",["37","38"],"/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/Button.stories.tsx",["39"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \".\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  button {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const PrimaryButton = () => (\n  <Wrapper>\n    <h1>Button</h1>\n    <Button variant=\"primary\" onClick={() => {}}>\n      Primary Button\n    </Button>\n    <Button variant=\"warning\" onClick={() => {}}>\n      Secondary Button\n    </Button>\n    <Button variant=\"success\" onClick={() => {}}>\n      Secondary Button\n    </Button>\n  </Wrapper>\n);\n\nexport default {\n  title: \"Component/Button\",\n  component: PrimaryButton,\n};\n","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/theme/index.ts",[],"/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/index.tsx",[],"/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/index.tsx",["40"],"import React from \"react\";\nimport CloseIcon from \"../../assets/icons/close.svg\";\nimport { GhostButton } from \"../Button\";\nimport { Button } from \"../Button\";\nimport {\n  Overlay,\n  ModalWrapper,\n  CloseContainer,\n  ModalContent,\n  ButtonsWrapper,\n} from \"./style\";\ntype Props = {\n  onClose?: () => void;\n  onSubmit?: () => void;\n  open: boolean;\n  children: React.ReactNode;\n};\n\nexport function Modal(props: Props) {\n  if (!props.open) return null;\n  return (\n    <>\n      <Overlay onClick={props.onClose} />\n      <ModalWrapper>\n        <CloseContainer>\n          <img src={CloseIcon} width={30} onClick={props.onClose} />\n        </CloseContainer>\n        <ModalContent>{props.children}</ModalContent>\n        <ButtonsWrapper>\n          <GhostButton onClick={props.onClose}>Cancel</GhostButton>\n          <Button variant=\"primary\" onClick={props.onSubmit}>\n            Submit\n          </Button>\n        </ButtonsWrapper>\n      </ModalWrapper>\n    </>\n  );\n}\n","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Button/styles.ts",["41"],"import styled, { css } from \"styled-components\";\nimport { GhostButton } from \".\";\n\nexport type ButtonVariants = \"primary\" | \"warning\" | \"error\" | \"success\";\n\ntype ButtonProps = {\n  variant: ButtonVariants;\n  rounded?: boolean;\n};\n\ntype GhostButtonProps = {\n  rounded?: boolean;\n};\n\nconst BaseButton = css`\n  font-family: \"Arial\";\n  font-weight: 600;\n  cursor: pointer;\n  overflow: hidden;\n  letter-spacing: 0.5px;\n  outline: none;\n  font-size: 16px;\n  border: 2px solid transparent;\n  border-radius: 9px;\n  position: relative;\n  user-select: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  padding: 12px 24px;\n`;\n\nexport const GhostButtonWrapper = styled.button<GhostButtonProps>`\n  ${BaseButton}\n  color: ${(props) => props.theme.colors.neutral500};\n  background: transparent;\n  transition: all 0.3s ease;\n  &:hover {\n    background: ${(props) => props.theme.colors.neutral200};\n  }\n  &:active {\n    background: ${(props) => props.theme.colors.neutral300};\n  }\n\n  &:disabled {\n    color: ${(props) => props.theme.colors.neutral100};\n    background: ${(props) => props.theme.colors.neutral300};\n  }\n`;\n\nexport const ButtonWrapper = styled.button<ButtonProps>`\n  ${BaseButton}\n  color: ${(props) => props.theme.colors.neutral100};\n  ${(props) => {\n    switch (props.variant) {\n      case \"primary\":\n        return css`\n          background-color: ${(props) => props.theme.colors.primary100};\n        `;\n      case \"warning\":\n        return css`\n          background-color: ${(props) => props.theme.colors.warning100};\n        `;\n      case \"error\":\n        return css`\n          background-color: ${(props) => props.theme.colors.error100};\n        `;\n      case \"success\":\n        return css`\n          background-color: ${(props) => props.theme.colors.success100};\n        `;\n      default:\n        break;\n    }\n  }}\n\n  &:active {\n    ${(props) => {\n      switch (props.variant) {\n        case \"primary\":\n          return css`\n            background-color: ${(props) => props.theme.colors.primary300};\n          `;\n        case \"warning\":\n          return css`\n            background-color: ${(props) => props.theme.colors.warning300};\n          `;\n        case \"error\":\n          return css`\n            background-color: ${(props) => props.theme.colors.error300};\n          `;\n        case \"success\":\n          return css`\n            background-color: ${(props) => props.theme.colors.success300};\n          `;\n        default:\n          break;\n      }\n    }}\n  }\n\n  &:hover {\n    ${(props) => {\n      switch (props.variant) {\n        case \"primary\":\n          return css`\n            background-color: ${(props) => props.theme.colors.primary200};\n          `;\n        case \"warning\":\n          return css`\n            background-color: ${(props) => props.theme.colors.warning200};\n          `;\n        case \"error\":\n          return css`\n            background-color: ${(props) => props.theme.colors.error200};\n          `;\n        case \"success\":\n          return css`\n            background-color: ${(props) => props.theme.colors.success200};\n          `;\n        default:\n          break;\n      }\n    }}\n  }\n\n  &:focus {\n    border: 2px solid ${(props) => props.theme.colors.blue};\n  }\n`;\n","/Users/davidpn.11/Documents/Coding/dp-labs/packages/ui-components/src/components/Modal/style.ts",[],{"ruleId":"42","severity":1,"message":"43","line":23,"column":9,"nodeType":"44","endLine":23,"endColumn":45},{"ruleId":"45","severity":1,"message":"46","line":29,"column":1,"nodeType":"47","endLine":32,"endColumn":3},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"45","severity":1,"message":"46","line":29,"column":1,"nodeType":"47","endLine":32,"endColumn":3},{"ruleId":"42","severity":1,"message":"43","line":26,"column":11,"nodeType":"44","endLine":26,"endColumn":69},{"ruleId":"52","severity":1,"message":"53","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'GhostButton' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]